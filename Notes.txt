/*
Layout components result in some form of static DOM element. It might not need to update frequently, if ever.

Consider a component that renders two children side-by-side.

<Home
  leftSide={<Menu />}
  rightSide={<PictureDisplayer />}
/>
We can aggressively optimize this component.

While Home will be parent to both components, it will never be their owner. We can tell it to update never, without interrupting the lifecycle of the components inside.

class Home extends React.Component {
  shouldComponentUpdate() {
    return false
  }

  render() {
    <FlexContainer>
      <div>{this.props.leftSide}</div>
      <div>{this.props.rightSide}</div>
    </FlexContainer>
  }
}
*/

/*
const Greeting = ({ name }) => {
  if (!name) { return <div>Connecting...</div> }

  return <div>Hi {name}!</div>
}
*/






/*
var AppLink = function(props) {
  return (
    <Link {...props} activeClassName="active-link" />
  );
}

var Index = function() {
  return (
    <div>
      <p>My App</p>
      <AppLink to="/">Home</AppLink><br />
      <AppLink to="/about">About</AppLink>
    </div>
  );
}

*/


